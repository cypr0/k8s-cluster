apiVersion: batch/v1
kind: CronJob
metadata:
  name: paperless-cronjob-fix-ownership
spec:
  schedule: "*/15 * * * *" # Every 15 minutes
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 60
      template:
        spec:
          containers:
            - name: paperless-fix-ownership
              image: alpine/curl:8.12.1
              envFrom:
                - secretRef:
                    name: paperless-secret
              command:
                - sh
                - -c
                - |

                  echo "üîç Installing jq..."
                  apk add --no-cache jq > /dev/null 2>&1

                  echo "üîç Starting Paperless bulk permissions fix..."
                  PAPERLESS_URL="http://paperless-paperless-ngx.productivity.svc.cluster.local"
                  OWNER_ID="3"
                  GROUP_ID="3"  # Group ID for assignment
                  AUTH_HEADER="Authorization: Token $PAPERLESS_API_TOKEN"

                  # Function to update permissions using the correct JSON structure
                  update_bulk_permissions() {
                      ITEM_TYPE=$1  # Either "tags" or "correspondents"
                      echo "üîç Checking for new $ITEM_TYPE..."

                      # Fetch all items that are not yet assigned to the group
                      ITEM_IDS=$(curl -s -H "$AUTH_HEADER" -H "Content-Type: application/json" "$PAPERLESS_URL/api/$ITEM_TYPE/" | jq -r '.results[] | select(.ownership != "group") | .id')

                      if [ -z "$ITEM_IDS" ]; then
                          echo "‚úÖ No new $ITEM_TYPE found, exiting."
                          return
                      fi

                      # Convert list of IDs into JSON array format
                      ID_LIST=$(echo "$ITEM_IDS" | jq -c -s '.')

                      # Construct JSON payload and print it for debugging
                      JSON_PAYLOAD=$(cat <<EOF
                  {
                    "objects": $ID_LIST,
                    "object_type": "$ITEM_TYPE",
                    "operation": "set_permissions",
                    "parameters": {
                      "owner": $OWNER_ID,
                      "set_permissions": {
                        "view": { "users": ["$OWNER_ID"], "groups": ["$GROUP_ID"] },
                        "change": { "users": ["$OWNER_ID"], "groups": ["$GROUP_ID"] }
                      }
                    },
                    "merge": true
                  }
                  EOF
                  )

                      echo "üìù JSON Payload for $ITEM_TYPE:"
                      echo "$JSON_PAYLOAD" | jq .  # Pretty print JSON for better readability

                      # Send request and capture full response
                      echo "üîÑ Sending request to update $ITEM_TYPE..."
                      RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X POST -H "$AUTH_HEADER" -H "Content-Type: application/json" \
                        "$PAPERLESS_URL/api/bulk_edit_objects/" -d "$JSON_PAYLOAD")

                      echo "üìú API Response:"
                      cat response.json | jq .  # Pretty print response JSON for better debugging

                      if [ "$RESPONSE" -ne 200 ]; then
                          echo "‚ùå Error updating $ITEM_TYPE! HTTP Status: $RESPONSE"
                      else
                          echo "‚úÖ Successfully updated permissions for $ITEM_TYPE"
                      fi
                  }

                  # Fix permissions for both tags and correspondents
                  update_bulk_permissions "tags"
                  update_bulk_permissions "correspondents"
                  update_bulk_permissions "document_types"

                  echo "‚úÖ Paperless permissions fix completed!"
          restartPolicy: OnFailure

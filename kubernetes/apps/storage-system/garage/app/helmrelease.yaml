---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: garage
spec:
  interval: 30m
  chart:
    spec:
      chart: script/helm/garage
      version: 0.7.0
      sourceRef:
        kind: GitRepository
        name: garage
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  uninstall:
    keepHistory: false
  values:
    garage:
      replicationMode: "1"
      rpcSecret: ${GARAGE_RPC_SECRET}
      s3:
        api:
          region: eu-central-1
          rootDomain: &api .s3-api.${SECRET_DOMAIN}
      garageTomlString: |
        metadata_dir = "/mnt/meta"
        data_dir = "/mnt/data"

        db_engine = "{{ .Values.garage.dbEngine }}"

        block_size = {{ .Values.garage.blockSize }}

        replication_mode = "{{ .Values.garage.replicationMode }}"

        compression_level = {{ .Values.garage.compressionLevel }}

        {{- if .Values.garage.metadataAutoSnapshotInterval }}
        metadata_auto_snapshot_interval = {{ .Values.garage.metadataAutoSnapshotInterval | quote }}
        {{- end }}

        rpc_bind_addr = "{{ .Values.garage.rpcBindAddr }}"
        rpc_secret = "${GARAGE_RPC_SECRET}"

        bootstrap_peers = {{ .Values.garage.bootstrapPeers }}

        [kubernetes_discovery]
        namespace = "{{ .Release.Namespace }}"
        service_name = "{{ include "garage.fullname" . }}"
        skip_crd = {{ .Values.garage.kubernetesSkipCrd }}

        [s3_api]
        s3_region = "{{ .Values.garage.s3.api.region }}"
        api_bind_addr = "[::]:3900"
        root_domain = "{{ .Values.garage.s3.api.rootDomain }}"

        [s3_web]
        bind_addr = "[::]:3902"
        root_domain = "{{ .Values.garage.s3.web.rootDomain }}"
        index = "{{ .Values.garage.s3.web.index }}"

        [admin]
        api_bind_addr = "[::]:3903"
        admin_token = "${GARAGE_RADMIN_TOKEN}"
        {{- if .Values.monitoring.tracing.sink }}
        trace_sink = "{{ .Values.monitoring.tracing.sink }}"
        {{- end }}
        {{- end }}
    deployment:
      replicaCount: 1
    persistence:
      meta:
        storageClass: "nas-nfs-store"
        size: 1Gi
      data:
        storageClass: "nas-nfs-store"
        size: 300Gi
    ingress:
      s3:
        api:
          enabled: true
          className: "external"
          annotations:
            external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
            nginx.ingress.kubernetes.io/proxy-body-size: 500m
          hosts:
            - host: *api
              paths:
                - path: /
                  pathType: Prefix
          tls: [hosts: [*api]]
    monitoring:
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    podSecurityContext:
      fsGroup: 3000
      runAsGroup: 3000
      runAsUser: 3000

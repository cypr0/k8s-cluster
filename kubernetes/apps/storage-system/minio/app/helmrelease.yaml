---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio
spec:
  interval: 30m
  chart:
    spec:
      chart: minio
      version: 5.4.0
      sourceRef:
        kind: HelmRepository
        name: minio
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  uninstall:
    keepHistory: false
  dependsOn:
    - name: external-secrets
      namespace: security
    - name: democratic-csi-nfs
      namespace: storage-system
  values:
    image:
      repository: quay.io/minio/minio
      tag: RELEASE.2025-01-20T14-49-07Z
    existingSecret: minio-secret
    mode: standalone
    replicas: 1
    resources:
      requests:
        memory: null
    persistence:
      enabled: true
      existingClaim: minio-pvc
    mountPath: "/data"
    policies:
    - name: readwrite-k8s-mastodon
      statements:
      - resources:
        - 'arn:aws:s3:::k8s-mastodon'
        - 'arn:aws:s3:::k8s-mastodon/*'
        actions:
        - 's3:*'
    - name: anonread-k8s-mastodon
      statements:
      - effect: Allow
        principal: "*"
        actions:
        - 's3:GetObject'
        resources:
        - 'arn:aws:s3:::k8s-mastodon/*'
    - name: readwrite-k8s-postgres
      statements:
      - resources:
        - 'arn:aws:s3:::k8s-postgres'
        - 'arn:aws:s3:::k8s-postgres/*'
        actions:
        - 's3:PutObject'
        - 's3:GetObject'
        - 's3:ListBucket'
        - 's3:DeleteObject'
    users:
    - accessKey: usrk8smastodon
      existingSecret: minio-secret
      existingSecretKey: mastodon-user
      policy: readwrite-k8s-mastodon
    - accessKey: usrk8spostgres
      existingSecret: minio-secret
      existingSecretKey: postgres-user
      policy: readwrite-k8s-postgres
    buckets:
    - name: k8s-mastodon
      policy: none
      purge: false
      versioning: false
      objectlocking: false
    - name: k8s-postgres
      policy: none
      purge: false
      versioning: false
      objectlocking: false
    securityContext:
      enabled: true
      runAsUser: 221
      runAsGroup: 220
      fsGroup: 220
      fsGroupChangePolicy: "OnRootMismatch"
    ingress:
      enabled: true
      ingressClassName: external
      annotations:
        external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
      path: /
      hosts:
        - &api s3.${SECRET_DOMAIN}
      tls:
        - hosts:
            - *api
          secretName: "s3-${SECRET_DOMAIN/./-}-tls"
    consoleIngress:
      enabled: true
      ingressClassName: internal
      path: /
      hosts:
        - &host minio.${SECRET_DOMAIN}
      tls:
        - hosts:
            - *host
          secretName: "minio-${SECRET_DOMAIN/./-}-tls"
    metrics:
      serviceMonitor:
        enabled: true
        includeNode: true

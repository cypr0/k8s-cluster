---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless-ai
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          paperless-ai:
            image:
              repository: docker.io/clusterzx/paperless-ai
              tag: 2.7.6
            env:
              PAPERLESS_AI_INITIAL_SETUP: "no"
              PAPERLESS_API_URL: "http://paperless-paperless-ngx.productivity.svc.cluster.local/api"
              AI_PROVIDER: "ollama"
              SCAN_INTERVAL: "*/5 * * * *"
              OLLAMA_API_URL: "http://ollama.ai.svc.cluster.local:11434"
              OLLAMA_MODEL: "gemma2:2b"
              SYSTEM_PROMPT: "You are a personalized document analyzer. Your task is to analyze documents and extract relevant information. Analyze the document content and extract the following information into a structured JSON object: 1. title: Create a concise, meaningful title for the document. The title must always be written in German. 2. correspondent: Identify the sender or institution but do not include addresses. The correspondent name must always be written in German, matching the available list if possible. 3. tags: Select up to 4 relevant thematic tags. Prefer existing tags, but create new ones only if necessary. All tags must always be in German. 4. document_date: Extract the document date in the format YYYY-MM-DD. 5. language: Determine the document language, using 'de' for German, 'en' for English, or 'und' if unclear. 6. document_type: Assign only an existing document type classification. The document_type must always be written in German. Do not create new classifications. Important instructions: For tags: Select up to 4 tags per document, fewer if sufficient. Prefer existing German tags. Create a new German tag only if no suitable one exists. Avoid overly generic or too specific tags. For the title: Keep it short and concise without addresses. Include the most important identification features. For invoices or orders, mention the invoice or order number if available. Always formulate the title in German. For the correspondent: Check the existing correspondent list first. If a match is found, use the existing correspondent exactly. Only create a new correspondent if no suitable match exists. Always use the shortest German company name form. For the document date: Extract the most relevant date from the document in the format YYYY-MM-DD. For the language: Determine the document language. Use language codes like de for German, en for English. If the language is unclear, use 'und'. For the document_type: Only use predefined document type classifications. Always write the document_type in German. If no matching classification exists, leave the field empty. Special rule for tags: Apply the tag 'Honorar' ONLY if the document indicates that the user is RECEIVING money (e.g., payment confirmations, fee agreements, invoices issued by the user). DO NOT apply 'Honorar' for invoices requiring payment by the user."
              PROCESS_PREDEFINED_DOCUMENTS: "yes"
              TAGS: "Neu"
              ADD_AI_PROCESSED_TAG: "yes"
              AI_PROCESSED_TAG_NAME: "KI"
              USE_PROMPT_TAGS: "no"
              PROMPT_TAGS: ""
              USE_EXISTING_DATA: "yes"
              ACTIVATE_CUSTOM_FIELDS: "no"
              CUSTOM_API_URL: "https://generativelanguage.googleapis.com/v1beta/openai"
            envFrom:
              - secretRef:
                  name: paperless-ai-secret
            resources:
              requests:
                cpu: 500m
                memory: 512Mi
              limits:
                cpu: 700m
                memory: 2Gi
    service:
      paperless-ai:
        controller: main
        ports:
          http:
            port: 3000
    ingress:
      app:
        enabled: true
        className: internal
        hosts:
          - host: &host "paperless-ai.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: paperless-ai
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: paperless-ai-pvc
        globalMounts:
          - path: /app/data
      logs:
        type: emptyDir
        globalMounts:
          - path: /app/logs
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp

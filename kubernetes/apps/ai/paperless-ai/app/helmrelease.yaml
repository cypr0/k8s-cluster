---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless-ai
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          paperless-ai:
            image:
              repository: docker.io/clusterzx/paperless-ai
              tag: 3.0.7
            env:
              PAPERLESS_AI_INITIAL_SETUP: "no"
              PAPERLESS_API_URL: "http://paperless-paperless-ngx.productivity.svc.cluster.local/api"
              AI_PROVIDER: "custom"
              SCAN_INTERVAL: "*/60 * * * *"
              OLLAMA_API_URL: "http://ollama.ai.svc.cluster.local:11434"
              OLLAMA_MODEL: "gemma3:4b"
              SYSTEM_PROMPT: |
                Du bist ein spezialisiertes Analysemodell zur Dokumentenauswertung. Analysiere den Inhalt des Dokuments und extrahiere die folgenden Informationen in einem **strukturierten JSON-Objekt**:

                ### Struktur:

                1. **title**:
                  Erstelle einen kurzen, prägnanten Titel auf **Deutsch**. Der Titel soll das Dokument eindeutig identifizieren. Bei Rechnungen, Bescheiden oder amtlichen Schreiben möglichst mit Nummer, Betreff oder Zeitraum.

                2. **correspondent**:
                  Gib den **Absender oder die Institution** an, **ohne Adresse**. Verwende die **deutsche Kurzform** (z. B. „Techniker Krankenkasse“, nicht „Die Techniker Krankenkasse, Zweigstelle XY“). Stimme, falls bekannt, mit bestehenden Namen überein.

                3. **tags**:
                  Weise dem Dokument bis zu **vier thematisch passende Schlagwörter auf Deutsch** zu.
                  Bevorzuge vorhandene Tags. Erstelle **neue Tags nur dann**, wenn kein passender existiert.
                  Spezialregel: Verwende den Tag **„Honorar“ nur dann**, wenn der Nutzer **Geld erhält** (z. B. Zahlungseingang, eigene Rechnung, Vergütungsmitteilung). **Nicht vergeben**, wenn der Nutzer eine Rechnung zahlen muss.

                4. **document_date**:
                  Gib das **relevante Datum** im Format `YYYY-MM-DD` an (z. B. Ausstellungsdatum, Rechnungsdatum, Datum des Schreibens).

                5. **language**:
                  Sprache des Dokuments:
                  - `de` = Deutsch
                  - `en` = Englisch
                  - `und` = unklar

                6. **document_type**:
                  Wechsle **ausschließlich** zwischen den folgenden erlaubten Dokumenttypen.
                  **Erstelle niemals neue Dokumenttypen. Verwende keine anderen Begriffe.**
                  Wenn kein Typ eindeutig passt, verwende **„Dokument“** als generische Auffangkategorie.

                ### Zulässige Dokumenttypen (Whitelist):
                - Bescheid
                - Dokument
                - Gehaltsabrechnung
                - Kontoauszug
                - Korrespondenz
                - LSt-Bescheinigung
                - NK-Abrechnung
                - Rechnung
                - Spendennachweis
                - Vertrag
                - Zeugnis
                - Zertifikate

                ### Ausgabeformat:
                Antwort ausschließlich im folgenden **JSON-Format** – **keine Kommentare, kein Fließtext**:

                {
                  "title": "Rechnung 2024-0178 von Telekom",
                  "correspondent": "Telekom",
                  "tags": ["Internet", "Rechnung"],
                  "document_date": "2024-03-14",
                  "language": "de",
                  "document_type": "Rechnung"
                }
              PROCESS_PREDEFINED_DOCUMENTS: "yes"
              TAGS: "Neu"
              ADD_AI_PROCESSED_TAG: "yes"
              AI_PROCESSED_TAG_NAME: "KI"
              USE_PROMPT_TAGS: "no"
              PROMPT_TAGS: ""
              USE_EXISTING_DATA: "yes"
              ACTIVATE_CUSTOM_FIELDS: "no"
              CUSTOM_API_URL: "https://openrouter.ai/api/v1"
              CUSTOM_MODEL: "google/gemini-2.5-flash"
            envFrom:
              - secretRef:
                  name: paperless-ai-secret
            resources:
              requests:
                cpu: 500m
                memory: 512Mi
              limits:
                cpu: 700m
                memory: 2Gi
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
    service:
      paperless-ai:
        controller: main
        ports:
          http:
            port: 3000
    ingress:
      app:
        enabled: true
        className: internal
        hosts:
          - host: &host "paperless-ai.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: paperless-ai
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: paperless-ai-pvc
        globalMounts:
          - path: /app/data
      logs:
        type: emptyDir
        globalMounts:
          - path: /app/logs
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
